<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="PikaUser">
    <resultMap type="PikaUser" id="PikaUserMap">
        <id property="id" column="id"/>
        <result property="createId" column="create_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="delFlag" column="del_flag"/>

        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="password" column="password"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="portrait" column="portrait"/>
    </resultMap>

    <sql id="tb">
        `pikachu_user`
    </sql>

    <sql id="cols_exclude_id">
        `name`, email, mobile, password, `type`, status, portrait,
        create_id, created_at, updated_at
    </sql>

    <sql id="cols">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="criteria">
        del_flag = 0
        <if test="id != null">and id = #{id}</if>
        <if test="createId != null">and create_id = #{createId}</if>
        <if test="createdAt != null">and created_at = #{createdAt}</if>
        <if test="updatedAt != null">and updated_at = #{updatedAt}</if>

        <if test="name != null">and name = #{name}</if>
        <if test="email != null">and email = #{email}</if>
        <if test="mobile != null">and mobile = #{mobile}</if>
        <if test="type != null">and `type` = #{type}</if>
        <if test="status != null">and status = #{status}</if>
        <if test="portrait != null">and portrait = #{portrait}</if>
    </sql>

    <sql id="values">
        #{name}, #{email}, #{mobile}, #{type}, #{status},
        #{createId}, now(), now()
    </sql>

    <select id="findById" parameterType="long" resultMap="PikaUserMap">
        select
        <include refid="cols"/>
        from
        <include refid="tb"/>
        where id = #{id} and del_flag = 0
    </select>

    <select id="findByName" parameterType="String" resultMap="PikaUserMap">
        select
        <include refid="cols"/>
        from
        <include refid="tb"/>
        where `name` = #{name} and del_flag = 0
    </select>

    <select id="findByCriteria" parameterType="map" resultMap="PikaUserMap">
        select
        <include refid="cols"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <select id="paging" parameterType="map" resultMap="PikaUserMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="map" resultType="long">
        select count(1)
        from
        <include refid="tb"/>
        <where>
            <include refid="criteria"/>
        </where>
    </select>

    <insert id="create" parameterType="PikaUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="values"/>)
    </insert>

    <insert id="createByName" parameterType="PikaUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (`name`, password, `type`, status, portrait,
        create_id, created_at, updated_at)
        VALUES
        (#{name}, #{password}, #{type}, #{status}, #{portrait},
        #{createId}, now(), now())
    </insert>

    <insert id="createByEmail" parameterType="PikaUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (`email`, password, `type`, status, portrait,
        create_id, created_at, updated_at)
        VALUES
        (#{email}, #{password}, #{type}, #{status}, #{portrait},
        #{createId}, now(), now())
    </insert>

    <insert id="createByMobile" parameterType="PikaUser" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (`mobile`, password, `type`, status, portrait,
        create_id, created_at, updated_at)
        VALUES
        (#{mobile}, #{password}, #{type}, #{status}, #{portrait},
        #{createId}, now(), now())
    </insert>
</mapper>